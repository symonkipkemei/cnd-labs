This article needs additional citations for verification. Please help improve this article by adding citations to reliable sources. Unsourced material may be challenged and removed.Find sources: "Static web page" – news · newspapers · books · scholar · JSTOR (February 2008) (Learn how and when to remove this template message)
A static web page (sometimes called a flat page or a stationary page) is a web page that is delivered to the user's web browser exactly as stored,[1] in contrast to dynamic web pages which are generated by a web application.[2]
Consequently, a static web page often displays the same information for all users, from all contexts, subject to modern capabilities of a web server to negotiate content-type or language of the document where such versions are available and the server is configured to do so.[3] However, a webpage's javascript can introduce dynamic functionality which may make the static web page dynamic.


Overview[edit]
Static web pages are often HTML documents[4] stored as files in the file system and made available by the web server over HTTP (nevertheless URLs ending with ".html" are not always static). However, loose interpretations of the term could include web pages stored in a database, and could even include pages formatted using a template and served through an application server, as long as the page served is unchanging and presented essentially as stored.
Static web pages are suitable for content that never or rarely needs to be updated, though modern web template systems are changing this. Maintaining large numbers of static pages as files can be impractical without automated tools, such as static site generators.  Any personalization or interactivity has to run client-side, which is restricting.[5]

Advantages of a static website[edit]
Provide improved security over dynamic websites (dynamic websites are at risk to web shell attacks if a vulnerability is present)[6]
Improved performance for end users compared to dynamic websites[7]
Fewer or no dependencies on systems such as databases or other application servers [8]
Cost savings from utilizing cloud storage, as opposed to a hosted environment[9]
Security configurations are easy to setup, which makes it more secure[10]
Disadvantages of a static website[edit]
Dynamic functionality must be performed on the client side[5]
Static site generators[edit]
Main article: Static site generator
Static site generators are applications that compile static websites - typically populating HTML templates in a predefined folder and file structure, with content supplied in a format such as MarkDown or Asciidoc.
Examples of static site generators include:

Jekyll
Hugo
Next.js
Pelican (Python)
References[edit]


^ Melendez, Steven (10 August 2018). "The Difference Between Dynamic & Static Web Pages". Chron. Archived from the original on 20 March 2019. Retrieved 20 March 2019. Static by definition means something that does not change. The first pages on the World Wide Web were largely static and unchanged, delivering the same information about a particular topic to anyone who visited. In some cases, sites may evolve slightly over time but are still largely static, meaning that they only change when manually changed by their creators, not on a regular and automated basis.

^ "Definition of: dynamic Web page". PC Magazine. Archived from the original on 17 January 2017. Retrieved 20 March 2019. A Web page that provides custom content for the user based on the results of a search or some other request.

^ "Site statique ou dynamique" [Static or dynamic site]. morphenZero (in French). Archived from the original on 11 September 2016. Retrieved 27 July 2019. Ces pages peuvent présenter toute forme de contenu, animations flash, images, musique, vidéo etc... mais elles sont toujours présentées de la même façon.

^ "What is a Static Web Page? - Definition from Techopedia". Techopedia.com. Retrieved 2018-11-04.

^ a b Bouças, Eduardo (20 May 2015). "An Introduction to Static Site Generators". Archived from the original on 26 June 2019. Retrieved 20 March 2019. A dangerous solution: There's an easy exit for whenever you're faced with the challenge of dynamically updating content on a static site: "I can do it with JavaScript". Doing processing on the client-side and appending the results to the page after it's been served can be the right approach for some cases, but must not be seen as the magic solution that turns your static site into a full dynamic one.

^ "Why use a static site generator? - Jekyll Tips". Jekyll Tips. 2017-02-06. Retrieved 2017-02-17.

^ "Why Static Website Generators Are The Next Big Thing – Smashing Magazine". Smashing Magazine. 2015-11-02. Retrieved 2017-02-17.

^ Bouças, Eduardo (20 May 2015). "An Introduction to Static Site Generators". Archived from the original on 21 July 2015. Retrieved 20 March 2019. Less hassle with the server: Installing and maintaining the infrastructure required to run a dynamic site can be quite challenging, especially when multiple servers are involved or when something needs to be migrated. There's packages, libraries, modules and frameworks with different versions and dependencies, there's different web servers and database engines in different operating systems.

^ Vincet, William (9 October 2018). "Static vs Dynamic Websites: Pros and Cons".

^ "Best Security Practices for Static Websites: The Ultimate Guide". smtechub. Retrieved 2021-01-14.


External links[edit]
The definitive listing of Static Site Generators, a community-curated list of static site generators.
vteWeb interfacesServer-sideProtocols
HTTP
v2
v3
Encryption
WebDAV
CGI
SCGI
FCGI
AJP
WSRP
WebSocket
Server APIs
C NSAPI
C ASAPI
C ISAPI
COM ASP
Jakarta Servlet
container
CLI OWIN
ASP.NET Handler
Python WSGI
Python ASGI
Ruby Rack
JavaScript JSGI
Perl PSGI
Portlet
container
Apache modules
mod_include
mod_jk
mod_lisp
mod_mono
mod_parrot
mod_perl
mod_php
mod_proxy
mod_python
mod_wsgi
mod_ruby
Phusion Passenger
Topics
Web resource vs. Web service
Open API
Webhook
Application server
comparison
Scripting
Client-sideBrowser APIs
C NPAPI
LiveConnect
XPConnect
C NPRuntime
C PPAPI
NaCl
ActiveX
BHO
XBAP
Web APIsW3C
Audio
Canvas
CORS
DOM
DOM events
EME
File
Geolocation
IndexedDB
MSE
SSE
SVG
Video
WebAssembly
WebAuthn
WebGPU
WebRTC
WebSocket
WebXR
Web messaging
Web storage
Web worker
XMLHttpRequest
Khronos
WebCL
WebGL
Others
Gears
Web SQL Database (formerly W3C)
WebUSB
Topics
Ajax and Remote scripting vs. DHTML
Browser extension
Mashup
Web IDL
Scripting
Topics
Web page
Static
Dynamic
Web standards
Web API security
Web application
Rich
Single-page
Progressive
Web framework




